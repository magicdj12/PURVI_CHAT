from pyrogram import Client, filters
from pyrogram.types import Message
from pyrogram.enums import ChatAction
from pymongo import MongoClient
import random
import os
import config

# تنظیمات اتصال به مونگو دی‌بی
MONGO_URL = os.environ.get("MONGO_URL", "mongodb+srv://teamdaxx123:teamdaxx123@cluster0.ysbpgcp.mongodb.net/?retryWrites=true&w=majority")
client = MongoClient(MONGO_URL, connectTimeoutMS=30000, serverSelectionTimeoutMS=30000)
db = client["Word"]
chatai = db["WordDb"]

# ایجاد کلاینت پایروگرام
app = Client(
    "chat-gpt",
    api_id=config.API_ID,
    api_hash=config.API_HASH,
    bot_token=config.BOT_TOKEN
)

# هندلر برای گروه‌ها (متن و استیکر)
@app.on_message((filters.text | filters.sticker) & ~filters.private & ~filters.bot)
async def group_handler(client: Client, message: Message):
    if not message.reply_to_message:
        vick = db["VickDb"]["Vick"]
        is_vick = vick.find_one({"chat_id": message.chat.id})
        
        if not is_vick:
            await message.chat.action(ChatAction.TYPING)
            
            # جستجو در دیتابیس
            results = list(chatai.find({"word": message.text}))
            
            if results:
                result = random.choice(results)
                if result.get('check') == "sticker":
                    await message.reply_sticker(result['text'])
                else:
                    await message.reply_text(result['text'])

# هندلر برای چت‌های خصوصی (متن و استیکر)
@app.on_message((filters.text | filters.sticker) & filters.private & ~filters.bot)
async def private_handler(client: Client, message: Message):
    try:
        if not message.reply_to_message:
            await message.chat.action(ChatAction.TYPING)
            
            # جستجو در دیتابیس
            results = list(chatai.find({"word": message.text}))
            
            if results:
                result = random.choice(results)
                if result.get('check') == "sticker":
                    await message.reply_sticker(result['text'])
                else:
                    await message.reply_text(result['text'])
                    
    except Exception as e:
        print(f"خطا: {e}")

# اجرای ربات
app.run()
